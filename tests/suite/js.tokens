Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Basic Javascript ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    function f', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        return 42;', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Different brace types ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    array = ', mode=DjJS), Open('[', mode=DjJS, level=1)], level=1)
Line([Text('        1,', mode=DjJS)], level=2)
Line([Text('        2,', mode=DjJS)], level=2)
Line([Text('        3,', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close(']', mode=DjJS)], level=1)
Line([])
Line([Text('    dictionary = ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        ', mode=DjJS), Text('value1:', mode=DjJS), Text(' 1,', mode=DjJS, relative=1)], level=2)
Line([Text('        ', mode=DjJS), Text('value2:', mode=DjJS), Text(' 2,', mode=DjJS, relative=1)], level=2)
Line([Text('        ', mode=DjJS), Text('value3:', mode=DjJS), Text(' 3,', mode=DjJS, relative=1)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([])
Line([Text('    function_call', mode=DjJS), Open('(', mode=DjJS, level=1)], level=1)
Line([Text('        arg1,', mode=DjJS)], level=2)
Line([Text('        arg2,', mode=DjJS)], level=2)
Line([Text('        arg3,', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Function chaining ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    one', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS)], level=1)
Line([Text('        .two', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS)], level=2)
Line([Text('        .three', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    four', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    function f', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        return 42;', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Double-nested braces ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    $', mode=DjJS), Open('(', mode=DjJS, level=1), Text('function', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        this.addEventListener', mode=DjJS), Open('(', mode=DjJS, level=2), Text("'change'", mode=DjJS), Text(', function ', mode=DjJS), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            doStuff', mode=DjJS), Open('(', mode=DjJS, level=3), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Multiline comment ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Open('/*', mode=DjJS, level=1, ignore=True)], level=1, ignore=True)
Line([Text('     * Hi mom!', mode=Comment, ignore=True)], level=2, ignore=True)
Line([Text('     *', mode=Comment, ignore=True)], level=2, ignore=True)
Line([Text('     ', mode=Comment, ignore=True), Close('*/', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Nasty characters embedded in strings ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    console.log', mode=DjJS), Open('(', mode=DjJS, level=1), Text('"$(function() {"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Text('    console.log', mode=DjJS), Open('(', mode=DjJS, level=1), Text("'$(function() {'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Text('    console.log', mode=DjJS), Open('(', mode=DjJS, level=1), Text('`$(function() {`', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Text('    console.log', mode=DjJS), Open('(', mode=DjJS, level=1), Text('`\nfunction f() {\nreturn 42;\n}\n    `', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Real-life example kindly provided by @jacklinke ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('format_duration_value = ', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=1), Text('a', mode=DjJS), Close(')', mode=DjJS), Text(' => ', mode=DjJS, relative=1, absolute=6), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        ', mode=DjJS), Text('let ', mode=DjJS), Text('secs = a * 3600;  ', mode=DjJS, absolute=4), Text('// get total amount of seconds from your input', mode=DjJS, ignore=True)], level=2)
Line([Text('        ', mode=DjJS), Text('const ', mode=DjJS), Text('days = Math.floor', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=2), Text('secs / ', mode=DjJS), Open('(', mode=DjJS, level=2), Text('3600 * 24', mode=DjJS), Close(')', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS, absolute=6)], level=2)
Line([Text('        return ', mode=DjJS), Open('(', mode=DjJS, level=2), Text('`\n            <div class="form-inline text-nowrap text-center">\n                ${days.toString().padStart(2,\'0\')}\n                <small>m</small>\n            </div>\n        `', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Text(';', mode=DjJS, absolute=6)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' More Javascript shenanigans ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    $', mode=DjJS), Open('(', mode=DjJS, level=1), Text('function1', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS)], level=1)
Line([Text('        ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            ', mode=DjJS), Text('var ', mode=DjJS), Text('foo = ', mode=DjJS, absolute=4), Open('(', mode=DjJS, level=3), Text('function2', mode=DjJS), Open('(', mode=DjJS, level=3), Close(')', mode=DjJS), Open('{', mode=DjJS, level=3)], level=3)
Line([Text('                doStuff', mode=DjJS), Open('(', mode=DjJS, level=4), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Open('(', mode=DjJS, level=3), Close(')', mode=DjJS), Text(';', mode=DjJS, relative=1, absolute=4)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Text('// Jeez', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' If elif else ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('let ', mode=DjJS), Text('time = 10;', mode=DjJS, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('time < 10', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        console.log', mode=DjJS), Open('(', mode=DjJS, level=2), Text('"Good morning"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Text(' else ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('time < 20', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        console.log', mode=DjJS), Open('(', mode=DjJS, level=2), Text('"Good day"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Text(' else ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        console.log', mode=DjJS), Open('(', mode=DjJS, level=2), Text('"Good evening"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Switch case indentation ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('mode = ', mode=DjJS, absolute=6), Text("'approved'", mode=DjJS, relative=1, absolute=6)], level=1)
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('mode', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'approved'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Approved'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'rejected'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Rejected'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Default'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('mode', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'approved'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Approved'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Default'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'rejected'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Rejected'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('mode', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'approved'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'rejected'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'invalid'", mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Not default'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Default'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('mode', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'approved'", mode=DjJS), Text(': ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Approved'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text("'rejected'", mode=DjJS), Text(': ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Rejected'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            console.log', mode=DjJS), Open('(', mode=DjJS, level=3), Text("'Default'", mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Switch complex example ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('year = 2016;', mode=DjJS, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('month = 2;', mode=DjJS, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('dayCount;', mode=DjJS, absolute=4)], level=1)
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('month', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('1:', mode=DjJS)], level=2)
Line([Text('            function switchFoo ', mode=DjJS), Open('(', mode=DjJS, level=3), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=3)], level=3)
Line([Text('                console.log', mode=DjJS), Open('(', mode=DjJS, level=4), Text('"Foo"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS)], level=3)
Line([Text('            switchFoo', mode=DjJS), Open('(', mode=DjJS, level=3), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('12:', mode=DjJS)], level=2)
Line([Text('            dayCount = 31;', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('4:', mode=DjJS)], level=2)
Line([Text('            switch', mode=DjJS), Open('(', mode=DjJS, level=3), Text('boo', mode=DjJS), Close(')', mode=DjJS), Open('{', mode=DjJS, level=3)], level=3)
Line([OpenDouble('                case ', mode=DjJS, level=4), Text('1:', mode=DjJS)], level=4)
Line([OpenDouble('                case ', mode=DjJS, level=4), Text('2:', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('11:', mode=DjJS)], level=2)
Line([Text('            dayCount = 30;', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('2:', mode=DjJS)], level=2)
Line([Text('            ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=3), Open('(', mode=DjJS, level=3), Open('(', mode=DjJS, level=3), Text('year % 4 == 0', mode=DjJS), Close(')', mode=DjJS), Text(' && !', mode=DjJS), Open('(', mode=DjJS, level=3), Text('year % 100 == 0', mode=DjJS), Close(')', mode=DjJS), Close(')', mode=DjJS), Text(' || ', mode=DjJS), Open('(', mode=DjJS, level=3), Text('year % 400 == 0', mode=DjJS), Close(')', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('{', mode=DjJS, level=3)], level=3)
Line([Text('                dayCount = 29;', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS), Text(' else ', mode=DjJS), Open('{', mode=DjJS, level=3)], level=3)
Line([Text('                dayCount = 28;', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS)], level=3)
Line([Text('            break;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2)], level=2)
Line([Text('            dayCount = -1; ', mode=DjJS), Text('// invalid month', mode=DjJS, ignore=True)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Text('    console.log', mode=DjJS), Open('(', mode=DjJS, level=1), Text('dayCount', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Nested switch statements ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('a', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('b:', mode=DjJS)], level=2)
Line([Text('            switch ', mode=DjJS), Open('(', mode=DjJS, level=3), Text('c', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=3)], level=3)
Line([OpenDouble('                case ', mode=DjJS, level=4), Text('d:', mode=DjJS)], level=4)
Line([Text('                    switch ', mode=DjJS), Open('(', mode=DjJS, level=5), Text('e', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=5)], level=5)
Line([Text('                        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=6)], level=6)
Line([Text('                    ', mode=DjJS), Close('}', mode=DjJS)], level=5)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Succinct switch statement ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('foo', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('bar:', mode=DjJS), Text(' break', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), OpenDouble('default:', mode=DjJS, level=2), Text(' return', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(" Things that look like switch, but aren't ", mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    function switchBoo ', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        console.log', mode=DjJS), Open('(', mode=DjJS, level=2), Text('"Boo"', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Text('    switchBoo', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('let ', mode=DjJS), Text('arr = ', mode=DjJS, absolute=4), Open('[', mode=DjJS, level=1)], level=1)
Line([Text('        ', mode=DjJS), Text("'switch'", mode=DjJS), Text(',', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), Text("'default:'", mode=DjJS), Text(',', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), Text("'case '", mode=DjJS), Text(',', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close(']', mode=DjJS), Text(';', mode=DjJS, absolute=4)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Another problematic switch statement ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    switch ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('foo', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1)], level=1)
Line([OpenDouble('        case ', mode=DjJS, level=2), Text('bar:', mode=DjJS)], level=2)
Line([Text('            ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=3), Text('baz', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('{', mode=DjJS, level=3)], level=3)
Line([Text('                switch ', mode=DjJS), Open('(', mode=DjJS, level=4), Text('foo', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=4)], level=4)
Line([OpenDouble('                    case ', mode=DjJS, level=5), Text('bar:', mode=DjJS)], level=5)
Line([Text('                        ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=6), Text('baz', mode=DjJS), Close(')', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('{', mode=DjJS, level=6)], level=6)
Line([Text('                            xizzy', mode=DjJS), Open('(', mode=DjJS, level=7), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=7)
Line([Text('                        ', mode=DjJS), Close('}', mode=DjJS)], level=6)
Line([Text('                ', mode=DjJS), Close('}', mode=DjJS)], level=4)
Line([Text('            ', mode=DjJS), Close('}', mode=DjJS)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' More function chaining ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    window.fetch', mode=DjJS), Open('(', mode=DjJS, level=1), Text("'/test.html'", mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('        .then', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Open('(', mode=DjJS, level=2), Text('html', mode=DjJS), Close(')', mode=DjJS), Text(' => ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            document.body.innerHTML = html;', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([])
Line([Text('    foo', mode=DjJS)], level=1)
Line([Text('        .bar', mode=DjJS, relative=1)], level=2)
Line([Text('        .baz', mode=DjJS, relative=1)], level=2)
Line([Text('        .then', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(' => ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            foo', mode=DjJS)], level=3)
Line([Text('                .bar', mode=DjJS, relative=1)], level=4)
Line([Text('                .baz', mode=DjJS, relative=1)], level=4)
Line([Text('                .then', mode=DjJS, relative=1), Open('(', mode=DjJS, level=4), Open('(', mode=DjJS, level=4), Close(')', mode=DjJS), Text(' => ', mode=DjJS), Open('{', mode=DjJS, level=4)], level=4)
Line([Text('                    foo', mode=DjJS)], level=5)
Line([Text('                        .bar', mode=DjJS, relative=1)], level=6)
Line([Text('                        .baz', mode=DjJS, relative=1)], level=6)
Line([Text('                ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=4)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=2)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Not enough closing tokens ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('head', mode=InsideHTMLTag, absolute=6), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjHTML), Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML, level=1)], level=1)
Line([Text('        function foo', mode=DjJS), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('    ', mode=DjJS), Close('</script>', mode=DjHTML)], level=1)
Line([Close('</head>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Too much closing tokens ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('head', mode=InsideHTMLTag, absolute=6), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjHTML), Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML, level=1)], level=1)
Line([Text('        function foo', mode=DjJS), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('</script>', mode=DjHTML)], level=1)
Line([Close('</head>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Single-line comments ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('// The following does not contain a comment', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    wsHost = ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('/^wss?:\\/\\//', mode=DjJS), Text('i.test', mode=DjJS), Open('(', mode=DjJS, level=1), Text('me._host', mode=DjJS), Close(')', mode=DjJS), Text(' ? ', mode=DjJS), Text("''", mode=DjJS), Text(' : me._protocol', mode=DjJS), Close(')', mode=DjJS), Text(' + me._host;', mode=DjJS, relative=1)], level=1)
Line([])
Line([Text('    foo; ', mode=DjJS), Text('// This is a comment', mode=DjJS, ignore=True)], level=1)
Line([Text('    bar ', mode=DjJS), Text('//This too', mode=DjJS, ignore=True)], level=1)
Line([Text('    baz', mode=DjJS), Text('//Even this', mode=DjJS, ignore=True)], level=1)
Line([])
Line([Text('    foo ', mode=DjJS), Text('// function() {', mode=DjJS, ignore=True)], level=1)
Line([Text('    bar ', mode=DjJS), Text('//     var a = 1;', mode=DjJS, ignore=True)], level=1)
Line([Text('    baz ', mode=DjJS), Text('// }', mode=DjJS, ignore=True)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Multi-line variable assignment ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('a = 1,', mode=DjJS, absolute=4)], level=1)
Line([Text('        b = 2,', mode=DjJS, absolute=4)], level=1, offset=4)
Line([Text('        c;', mode=DjJS, absolute=4)], level=1, offset=4)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('foo = bar; ', mode=DjJS, absolute=4), Text('let ', mode=DjJS), Text('a = 1,', mode=DjJS, absolute=19)], level=1)
Line([Text('                       b = 2,', mode=DjJS, absolute=19)], level=1, offset=19)
Line([Text('                       c', mode=DjJS, absolute=19)], level=1, offset=19)
Line([])
Line([Text('    ', mode=DjJS), Text('// Haskell-style indentation', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('a = 1', mode=DjJS, absolute=6)], level=1)
Line([Text('        , b = 2', mode=DjJS, absolute=4)], level=1, offset=4)
Line([Text('        , c', mode=DjJS, absolute=4)], level=1, offset=4)
Line([])
Line([Text('    ', mode=DjJS), Text('// Notice the first line is the same', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('a = 1', mode=DjJS, absolute=6)], level=1)
Line([Text('    b = 2', mode=DjJS)], level=1)
Line([Text('    c = 3', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('// Yes, this makes sense', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('func1 = function', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS, absolute=6), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        return foo', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Text(',', mode=DjJS, absolute=6)], level=1)
Line([Text('          func2 = function', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS, absolute=6), Open('{', mode=DjJS, level=1), Text(' return 2 ', mode=DjJS), Close('}', mode=DjJS), Text(',', mode=DjJS, absolute=6)], level=1, offset=6)
Line([Text('          func3 = function', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS, absolute=6), Open('{', mode=DjJS, level=1), Text(' return 3 ', mode=DjJS), Close('}', mode=DjJS)], level=1, offset=6)
Line([])
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('foo = bar,', mode=DjJS, absolute=6)], level=1)
Line([Text('          baz = ', mode=DjJS, absolute=6), Open('{', mode=DjJS, level=1)], level=1, offset=6)
Line([Text('        ...', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('// We are not supporting madness like this', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('a = 1,', mode=DjJS, absolute=6)], level=1)
Line([Text('    ', mode=DjJS), Open('{% if %}', mode=DjTXT, level=1)], level=1)
Line([Text('        b = 2,', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('{% endif %}', mode=DjTXT)], level=1)
Line([Text('    c = 3;', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Things that look like case statements, and the "spread" operator ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('case = ', mode=DjJS, absolute=4), Text('"foo"', mode=DjJS, relative=1, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('dict = ', mode=DjJS, absolute=4), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        ', mode=DjJS), Text('case:', mode=DjJS), Text(' ', mode=DjJS, relative=1), Text('"bar"', mode=DjJS, relative=1), Text(',', mode=DjJS)], level=2)
Line([Text('        ', mode=DjJS), Text('"default:"', mode=DjJS), Text(': ', mode=DjJS), Text('"baz"', mode=DjJS, relative=1), Text(',', mode=DjJS)], level=2)
Line([Text('        ...params,', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Multi-line ternary operator ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    foo', mode=DjJS)], level=1)
Line([Text('        ? bar', mode=DjJS, relative=1)], level=2)
Line([Text('        : baz', mode=DjJS, relative=1)], level=2)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Quoted strings with escaped quotes ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('foo = ', mode=DjJS, absolute=4), Text("'\\'{'", mode=DjJS, relative=1, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('bar = ', mode=DjJS, absolute=4), Text('"\\"{"', mode=DjJS, relative=1, absolute=4)], level=1)
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('baz = ', mode=DjJS, absolute=4), Text('`\\`{`', mode=DjJS, relative=1, absolute=4)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Single-line statements ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('foo', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('        bar', mode=DjJS, relative=1)], level=2)
Line([])
Line([Text('    ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('foo', mode=DjJS), Close(')', mode=DjJS), Text(' return', mode=DjJS, relative=1)], level=1)
Line([Text('    bar', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1)], level=1)
Line([Text('        foo &&', mode=DjJS)], level=2)
Line([Text('        bar', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('        baz', mode=DjJS, relative=1)], level=2)
Line([Text('    ', mode=DjJS), Text('else', mode=DjJS)], level=1)
Line([Text('        return', mode=DjJS, relative=1)], level=2)
Line([])
Line([Text('    ', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('foo', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('        ', mode=DjJS, relative=1), Text('if', mode=DjJS, relative=1), Text(' ', mode=DjJS, relative=2), Open('(', mode=DjJS, level=2), Text('bar', mode=DjJS), Close(')', mode=DjJS)], level=2)
Line([Text('            ', mode=DjJS, relative=2), Text('if', mode=DjJS, relative=2), Text(' ', mode=DjJS, relative=3), Open('(', mode=DjJS, level=3), Text('baz', mode=DjJS), Close(')', mode=DjJS)], level=3)
Line([Text('                return', mode=DjJS, relative=3)], level=4)
Line([Text('    ', mode=DjJS), Text('else', mode=DjJS)], level=1)
Line([Text('        console.log', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Text('"Footgun detected!"', mode=DjJS), Close(')', mode=DjJS)], level=2)
Line([])
Line([Text('    leitmot', mode=DjJS), Text('if', mode=DjJS), Text(' ', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS)], level=1)
Line([Text('    elsewhere ', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(';', mode=DjJS)], level=1)
Line([Text('    mean', mode=DjJS), Text('while', mode=DjJS), Text(' ', mode=DjJS), Open('(', mode=DjJS, level=1), Text('true', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('while', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('true', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('        break', mode=DjJS, relative=1)], level=2)
Line([])
Line([Text('    ', mode=DjJS), Text('for', mode=DjJS), Text(' ', mode=DjJS, relative=1), Open('(', mode=DjJS, level=1), Text('i=1, 1<10, i++', mode=DjJS), Close(')', mode=DjJS)], level=1)
Line([Text('    ', mode=DjJS, relative=1), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        break', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Multi-line variables and dictionaries ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    ', mode=DjJS), Text('var ', mode=DjJS), Text('foo =', mode=DjJS, absolute=4)], level=1)
Line([Text('        bar', mode=DjJS, relative=1)], level=2)
Line([])
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('func =', mode=DjJS, absolute=6)], level=1)
Line([Text('        function', mode=DjJS, relative=1), Open('(', mode=DjJS, level=2), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=2)], level=2)
Line([Text('            return', mode=DjJS)], level=3)
Line([Text('        ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS)], level=2)
Line([])
Line([Text('    ', mode=DjJS), Text('// Note that unquoted "default" is a reserved keyword', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('let ', mode=DjJS), Text('dict = ', mode=DjJS, absolute=4), Open('{', mode=DjJS, level=1)], level=1)
Line([Text('        ', mode=DjJS), Text('"default"', mode=DjJS), Text(':', mode=DjJS)], level=2)
Line([Text('            foo', mode=DjJS, relative=1)], level=3)
Line([Text('        ', mode=DjJS), Text('bar:', mode=DjJS)], level=2)
Line([Text('            baz', mode=DjJS, relative=1)], level=3)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])
Line([])
Line([Open('<!--', mode=DjHTML, ignore=True), Text(' Expression literals ', mode=Comment, ignore=True), Close('-->', mode=DjHTML, ignore=True)], ignore=True)
Line([Text('<', mode=DjHTML), Text('script', mode=InsideHTMLTag, absolute=8), Open('>', mode=DjHTML)])
Line([Text('    re = ', mode=DjJS), Text('/ab+c/', mode=DjJS, relative=1)], level=1)
Line([Text('    space_re = / foo /', mode=DjJS)], level=1)
Line([Text('    single_re = ', mode=DjJS), Text('/foo\\/ + bar/', mode=DjJS, relative=1)], level=1)
Line([Text('    double_re = ', mode=DjJS), Text('/foo/', mode=DjJS, relative=1), Text(' + ', mode=DjJS), Text('/bar/', mode=DjJS)], level=1)
Line([Text('    looks_like_comment = ', mode=DjJS), Text('/\\(/', mode=DjJS, relative=1), Text('/', mode=DjJS)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('x = 42', mode=DjJS, absolute=6)], level=1)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('y = 7', mode=DjJS, absolute=6)], level=1)
Line([Text('    ', mode=DjJS), Text('const ', mode=DjJS), Text('six = x / ', mode=DjJS, absolute=6), Open('(', mode=DjJS, level=1), Text('function', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(' ', mode=DjJS), Open('{', mode=DjJS, level=1), Text(' ', mode=DjJS), Text('// comment', mode=DjJS, ignore=True)], level=1)
Line([Text('        return y', mode=DjJS)], level=2)
Line([Text('    ', mode=DjJS), Close('}', mode=DjJS), Close(')', mode=DjJS), Open('(', mode=DjJS, level=1), Close(')', mode=DjJS), Text(';', mode=DjJS, absolute=6)], level=1)
Line([])
Line([Text('    foo = ', mode=DjJS), Text('/([{/', mode=DjJS, relative=1)], level=1)
Line([Text('    bar = ', mode=DjJS), Text('/\\/{/', mode=DjJS, relative=1)], level=1)
Line([Text('    baz = ', mode=DjJS), Text('//{//', mode=DjJS, ignore=True)], level=1)
Line([Text('    xizzy = ', mode=DjJS), Text('/{/', mode=DjJS, relative=1)], level=1)
Line([])
Line([Text('    ', mode=DjJS), Text('// The following is no longer broken \\o/', mode=DjJS, ignore=True)], level=1, ignore=True)
Line([Text('    ', mode=DjJS), Text('/function() {/', mode=DjJS)], level=1)
Line([Text('    return', mode=DjJS)], level=1)
Line([Close('</script>', mode=DjHTML)])
Line([])